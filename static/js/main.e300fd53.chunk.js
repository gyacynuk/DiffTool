(this["webpackJsonpdiff-tool"]=this["webpackJsonpdiff-tool"]||[]).push([[0],{18:function(e,t,n){e.exports=n(30)},23:function(e,t,n){},29:function(e,t,n){},30:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(12),o=n.n(i),l=(n(23),n(1)),s=n(4),u=n(6),c=n(5),h=n(7),f=n(2),d=n(3),p=Object.freeze({INSERT:1,DELETE:2,REPLACE:3,NONE:4});function E(e,t){for(var n=new Array(t),r=0;r<t;r++)n[r]=new Array(e);return n}function m(e,t,n){return n<0||n>=e.length?Number.POSITIVE_INFINITY:t<0||t>=e[0].length?Number.POSITIVE_INFINITY:e[n][t]}var g=function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;Object(l.a)(this,e),this.operation=t,this.symbol=n,this.secondarySymbol=r},v=function(){function e(t,n){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];Object(l.a)(this,e),this.newWord=t,this.oldWord=n;var a=r?function(e,t){var n=e.length+1,r=t.length+1,a=E(n,r);a[0][0]=0;for(var i=1;i<n;i++)a[0][i]=a[0][i-1]+e[i-1].length;for(var o=1;o<r;o++)a[o][0]=a[o-1][0]+t[o-1].length;for(var l=1;l<n;l++)for(var s=1;s<r;s++){var u=0;e[l-1]!==t[s-1]&&(u=new v(e[l-1],t[s-1],!1).minEditDistance),a[s][l]=Math.min(a[s-1][l]+t[s-1].length,a[s][l-1]+e[l-1].length,a[s-1][l-1]+u)}return a}(t,n):function(e,t){var n=e.length+1,r=t.length+1,a=E(n,r);a[0][0]=0;for(var i=1;i<n;i++)a[0][i]=a[0][i-1]+1;for(var o=1;o<r;o++)a[o][0]=a[o-1][0]+1;for(var l=1;l<n;l++)for(var s=1;s<r;s++){var u=0;e[l-1]!==t[s-1]&&(u=1),a[s][l]=Math.min(a[s-1][l],a[s][l-1],a[s-1][l-1])+u}return a}(t,n);this.minEditDistance=a[n.length][t.length],this.fullEdits=function(e,t,n){for(var r=[],a=t.length,i=n.length;0!==i||0!==a;){var o=m(e,a-1,i),l=m(e,a,i-1),s=m(e,a-1,i-1),u=Math.min(o,l,s);if(u===s){var c=m(e,a,i);a--,i--,s<c?r.push(new g(p.REPLACE,t[a],n[i])):r.push(new g(p.NONE,t[a]))}else u===o?(a--,r.push(new g(p.INSERT,t[a]))):(i--,r.push(new g(p.DELETE,n[i])))}return r.reverse()}(a,t,n),this.edits=this.fullEdits.filter((function(e){return e.operation!==p.NONE}))}return Object(s.a)(e,[{key:"getNumDisjointReplacements",value:function(){if(0===this.fullEdits.length)return 0;for(var e=0,t=null,n=0;n<this.fullEdits.length;n++){var r=this.fullEdits[n].operation;r===p.REPLACE&&t!==p.REPLACE&&e++,t=r}return e}}]),e}();function b(){var e=Object(f.a)(["\n    ",";\n"]);return b=function(){return e},e}function y(){var e=Object(f.a)(["\n    width: 32px;\n    padding-right: 8px;\n    padding-left: 0px;\n    text-align: right;\n    color: #AAA;\n    background-color: rgba(0, 0, 0, .1);\n"]);return y=function(){return e},e}function w(){var e=Object(f.a)(["\n    padding: 2px 8px;\n    display: inline-block;\n    white-space: pre;\n"]);return w=function(){return e},e}function N(){var e=Object(f.a)(["\n    width: 100%;\n    height: auto;\n    text-align: left;\n    font-family: 'Inconsolata', monospace;\n\n    ",";\n"]);return N=function(){return e},e}var I=d.a.div(N(),(function(e){return e.operation===p.INSERT?"background-color: #daffd9":e.operation===p.DELETE?"background-color: #ffd9df":void 0})),D=d.a.span(w()),T=Object(d.a)(D)(y()),j=d.a.span(b(),(function(e){return e.operation===p.INSERT?"background-color: #a8f7a6":e.operation===p.DELETE?"background-color: #f7a6a6":void 0})),O=function(e){function t(){return Object(l.a)(this,t),Object(u.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){var e=this.props.editEntity,t=e.operation,n=e.symbol,r=e.entityNumber,i=e.subEditEntities,o=a.a.createElement("div",null,"\xa0");t===p.INSERT?o="+":t===p.DELETE&&(o="-");var l=a.a.createElement(D,{operation:t},n);return i&&(l=a.a.createElement(D,{operation:t},i.map((function(e,t){return a.a.createElement(j,{operation:e.operation,key:t},e.symbol)})))),a.a.createElement(I,{operation:t},a.a.createElement(T,{operation:t},r),a.a.createElement(D,{operation:t},o),l)}}]),t}(r.Component),k=n(15);function R(e){return e.length>0?e[e.length-1].entityNumber:Number.NEGATIVE_INFINITY}function L(e,t){var n=R(e[p.DELETE]),r=R(e[p.INSERT]),a=R(e[p.NONE]),i=Math.max(n,r,a);return n===t-1?e[p.DELETE].pop():r===t-1?e[p.INSERT].pop():i===n?e[p.DELETE].pop():i===r?e[p.INSERT].pop():e[p.NONE].pop()}function S(e){var t=[],n=1;return e.fullEdits.forEach((function(e){t.push.apply(t,Object(k.a)(function(e,t){var n=e.operation,r=e.symbol,a=e.secondarySymbol;if(n===p.REPLACE){var i=new v(r,a,!1),o=i.fullEdits.map((function(e){return e.operation===p.REPLACE?new g(p.INSERT,e.symbol):e})).filter((function(e){return e.operation!==p.DELETE})),l=i.fullEdits.map((function(e){return e.operation===p.REPLACE?new g(p.DELETE,e.secondarySymbol):e})).filter((function(e){return e.operation!==p.INSERT}));return[new A(p.INSERT,r,t,o),new A(p.DELETE,a,t,l)]}return p.INSERT,[new A(n,r,t)]}(e,n))),n++})),function(e){for(var t=e.reduce((function(e,t){return e[t.operation].push(t),e}),{1:[],2:[],3:[],4:[]}),n=[],r=e.length,a=0;a<e.length;a++){var i=L(t,r);n.push(i),r=i.entityNumber}return n.reverse()}(t)}var A=function e(t,n,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;Object(l.a)(this,e),this.operation=t,this.symbol=n,this.entityNumber=r,this.subEditEntities=a};n(29);function x(){var e=Object(f.a)(["\n    width: 100%;\n    height: 180px;\n"]);return x=function(){return e},e}function P(){var e=Object(f.a)(["\n    display: inline-block;\n    width: 50%;\n"]);return P=function(){return e},e}var C=["Hello World!","Please enjoy playing around with my attempt at a text diff tool!","It will try to display differences in an easy-to-read format,","by doing things such as grouping blocks of contiguous edits together (as seen above),","or by highlighting micro-differences between lines (as seen here).","If a line requires more than 3 replacements, then it will not be highlighted, as things can get messy.","Instead, the two lines will be treated as disjoint insertions and deletions, as seen below:","I have fixed typos here as an example ;)","This heuristic seems to work well in most cases."],M=["Hello!","Please enjoy trying out my attempt at a text diff tool!","It will try to display differences in an easy-to-read format,","by doing things such as grouping blocks of contiguous edits together (as seen above),","or by highlighting small differences between lines (as seen here).","If a line requires more than 3 replacements, then it will not be highlighted, as things can get messy.","Instead, the two lines will be treated as disjoint insertions and deletions, as seen below:","i ficed typos ans an excmple :)","This hueristic seeems to wok well in most caces."],W=d.a.div(P()),Y=d.a.textarea(x()),_=function(e){function t(){var e,n;Object(l.a)(this,t);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(n=Object(u.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(a)))).state={newDocument:C,oldDocument:M,editDistance:new v(C,M)},n}return Object(h.a)(t,e),Object(s.a)(t,[{key:"updateDocument",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this.state,r=n.newDocument,a=n.oldDocument;t?r=e.value.split("\n"):a=e.value.split("\n"),this.setState({newDocument:r,oldDocument:a,editDistance:new v(r,a)})}},{key:"updateOldDocument",value:function(e){var t=e.split("\n");this.setState({newDocument:C,oldDocument:t,editDistance:new v(C,t)})}},{key:"render",value:function(){var e=this;return a.a.createElement("div",{className:"App"},a.a.createElement("header",{className:"App-header"},a.a.createElement("span",{className:"App-header-title"},"Minimal Levenshtein Distance Difference Tool"),a.a.createElement("p",null,"Project by\xa0",a.a.createElement("a",{className:"App-link",href:"https://www.linkedin.com/in/griffin-yacynuk/",target:"_blank",rel:"noopener noreferrer"},"Griffin Yacynuk"))),a.a.createElement("div",null,a.a.createElement(W,null,a.a.createElement(Y,{onChange:function(t){return e.updateDocument(t.target,!0)},value:this.state.newDocument.join("\n")})),a.a.createElement(W,null,a.a.createElement(Y,{onChange:function(t){return e.updateDocument(t.target,!1)},value:this.state.oldDocument.join("\n")}))),a.a.createElement("div",null,S(this.state.editDistance).map((function(e,t){return a.a.createElement(O,{editEntity:e,key:t})}))))}}]),t}(r.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(a.a.createElement(_,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[18,1,2]]]);
//# sourceMappingURL=main.e300fd53.chunk.js.map